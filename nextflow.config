manifest {
    name = 'Measuring selection in avian immune genes'
    author = 'Mahesh Binzer-Panchal'
    homePage = ''
    description = 'A workflow to measure selection in avian immune genes'
    mainScript = 'main.nf'
    //  '!>=21.04.0' : Run with version 21.04.0 or higher, otherwise exit.
    nextflowVersion = '!>=21.04.0'
    version = '1.0'
}

params {
    // Include default parameters for the workflow.
    // Override them in the params.config located in the analyses directories.

    // Workflow inputs
    gene_sequences = ''     // Prank sequence file
    species_tree = ''       // Prank species tree
    hyphy_test = 'absrel'   // HyPhy model

    // Workflow outputs
    results = 'results'      // Workflow results folder
    // Mode of copying results from the work directory
    // 'symlink' : Use for test data.
    // 'copy'    : Use for full analysis data.
    publish_mode = 'copy'   // values: 'symlink', 'copy'

    // Workflow tool configuration
    // Enable Conda for software management (using Docker or Singularity is recommended).
    enable_conda = false
    // Enable Singularity container construction from Docker image
    // instead of using existing Singularity image.
    singularity_pull_docker_container = false

    // Uppmax specific parameters
    project = ''            // Uppmax project allocation
    clusterOptions = ''     // Provide additional options here, e.g. to use a fat node
}

// Module configuration options
includeConfig "$baseDir/configs/modules.config"
// Paths to publish results.
includeConfig "$baseDir/configs/publishDirs.config"

profiles {

    // A profile for the Uppmax clusters
    uppmax {
        process {
            executor = 'slurm'
            clusterOptions = { "-A $params.project ${params.clusterOptions ?: ''}" }
            // Use node local storage for execution.
            scratch = '$SNIC_TMP'
        }
        // Specify resources to use.
        includeConfig "$baseDir/configs/compute_resources.config"
        // Specify singularity containers to use.
        singularity.enabled = true
        singularity.envWhitelist = 'SNIC_TMP'
    }

    // A profile for running locally with Docker
    docker_local {
        process {
            executor = 'local'
            scratch = true
        }
        includeConfig "$baseDir/configs/compute_resources.config"
        docker.enabled = true
        docker.userEmulation = true
    }

    // A profile for running locally with Singularity
    // (e.g., using an interactive Uppmax session)
    singularity_local {
        process {
            executor = 'local'
            scratch = '$SNIC_TMP'
        }
        includeConfig "$baseDir/configs/compute_resources.config"
        singularity.enabled = true
        singularity.envWhitelist = 'SNIC_TMP'
   }

}

